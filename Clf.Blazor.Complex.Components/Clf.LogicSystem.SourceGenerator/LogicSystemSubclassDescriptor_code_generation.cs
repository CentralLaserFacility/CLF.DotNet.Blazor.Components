//
// LogicSystemSubclassDescriptorEx_code_generation.cs
//

using System;

namespace Clf.LogicSystem.SourceGenerator
{
  partial class LogicSystemSubclassDescriptor
  {
    private static readonly string GeneratedCodeAttribute = $@"[global::System.CodeDom.Compiler.GeneratedCodeAttribute(""{typeof(IncrementalSourceGenerator).Assembly.GetName().Name}"", ""{typeof(IncrementalSourceGenerator).Assembly.GetName().Version}"")]";

    /// <summary>
    /// Generate code from the collected properties
    /// </summary>
    /// <param name="sourceProductionContext"></param>
    public void GenerateCode ( 
      System.Action<string,string> sourceProductionContext
    ) {
    System.Text.StringBuilder generatedCode = new (
      $$"""
        // <auto-generated/>
        //
        // {{NamespaceName}}.{{ClassName}}.g.cs (generated code)
        //
        // Instance number #{{InstanceNumber}}
        // Thread is #{{System.Threading.Thread.CurrentThread.ManagedThreadId}}
        //

        namespace {{NamespaceName}} ;
      
        partial class {{ClassName}}: Clf.LogicSystem.LogicSystemBase
        {
          {{GeneratedCodeAttribute}}
          public override void BuildDependencies ( )
          {
            OnBuildDependencies_Begin();

        """
      );

      string propertyName, lambdaBody, lambdaBodyProperties;
      foreach (var inputNodeDescriptor in InputNodeDescriptors)
      {
        propertyName = inputNodeDescriptor.PropertyName!;

        generatedCode.AppendLine();
        foreach (var item in inputNodeDescriptor.AttributesDictionary)
        {
          if (item.Key.Equals("PositionedBelow"))
          {
            generatedCode.AppendLine(
            $$"""
                  {{propertyName}}.AddAttribute("{{item.Key}}", $"{{{propertyName}}.UniqueIntegerIdentifierAsString}:{{{item.Value}}.UniqueIntegerIdentifierAsString}");
              """
            );
          }
          else
          {
            generatedCode.AppendLine(
            $$"""
                {{propertyName}}.AddAttribute("{{item.Key}}", @"{{item.Value}}");
            """
            );
          }
        }

        generatedCode.AppendLine(
        $$"""
            Clf.LogicSystem.LogicSystemBase.ConfigureNodeWidthAndHeightAttributes({{propertyName}});
        """
        );

      }

      foreach (var computedNodeDescriptor in ComputedNodeDescriptors)
      {
        propertyName = computedNodeDescriptor.PropertyName!;
        lambdaBody = computedNodeDescriptor.LambdaBodyText!;
        lambdaBodyProperties = computedNodeDescriptor.LambdaBodyProperties!;

        generatedCode.AppendLine();
        foreach (var item in computedNodeDescriptor.AttributesDictionary)
        {
          if (item.Key.Equals("PositionedBelow"))
          {
            generatedCode.AppendLine(
            $$"""
                  {{propertyName}}.AddAttribute("{{item.Value}}", $"{{{propertyName}}.UniqueIntegerIdentifierAsString}:{{{item.Value}}.UniqueIntegerIdentifierAsString}");
              """
            );
          }
          else
          {
            generatedCode.AppendLine(
            $$"""
                {{propertyName}}.AddAttribute("{{item.Key}}", @"{{item.Value}}");
            """
            );
          }

        }

        generatedCode.AppendLine(
        $$"""
            {{propertyName}}.NodesAccessedInComputedValueFuncXX = new(){
                {{lambdaBodyProperties}}
            } ;
            Clf.LogicSystem.LogicSystemBase.ConfigureNodeWidthAndHeightAttributes({{propertyName}});

            // Build dependency links for the computed node
            {{propertyName}}.SetCacheAndBuildDependencyLinks();
        """
        );

      }

      foreach (string exceptionMessage in ExceptionMessages)
      {
        generatedCode.AppendLine(
      $$"""

          // Exception : {{exceptionMessage}}
      """
        );
      }

      generatedCode.AppendLine();
      generatedCode.AppendLine(
      $$"""
        OnBuildDependencies_End();
      }

    }
    """
      );

      sourceProductionContext(
          $"{NamespaceName}.{ClassName}.g.cs",
          $"{generatedCode}"
      );

    }
  }
}