@page "/graph-examples"

@using Clf.Blazor.Basic.Components.Controls.Enums;
@using Clf.Blazor.Basic.Components.Controls.Models;
@using Clf.Blazor.Basic.Components.Controls.ViewModels.MonitorWidgetViewModels;
@using Clf.Blazor.Basic.Components.Controls.ViewModels.UpdateWidgetViewModels;
@using Clf.Blazor.Basic.Components.Controls.Widgets.Monitors
@using Clf.Blazor.Basic.Components.Controls.Widgets.Updates
@using Clf.Common.ImageProcessing;
@using System.Timers;

<h3>Graph Component Examples</h3>

<table>
  <tr>
    <th scope="row">Default</th>
    <td><Graph ViewModel="@_defaultGraphViewModel" /></td>
  </tr>

  <tr>
    <th scope="row">Area</th>
    <td><Graph ViewModel="@_areaGraphViewModel" /></td>
  </tr>
  
  <tr>
    <th scope="row">Area with overlays</th>
    <td><Graph ViewModel="@_areaWithOverlaysGraphViewModel" /></td>
  </tr>

</table>

@code {

  public GraphViewModel _defaultGraphViewModel = new GraphViewModel(
   xTitle: "Time(ns)",
   yTitle: "Data",
   graphType: GraphType.Line,
   showGrid:true,
   width: 400,
   height: 300);

  public GraphViewModel _areaGraphViewModel = new GraphViewModel(
   xTitle: "Time(ns)",
   yTitle: "Data",
   graphType: GraphType.Area,
   width: 400,
   height: 300);
  public GraphViewModel _areaWithOverlaysGraphViewModel = new GraphViewModel(
   xTitle: "Time(ns)",
   yTitle: "Data",
   graphType: GraphType.Area,
   overlayStart:20,
   overlayEnd:50,
   showOverlay : true,
   width: 400,
   height: 300);

  protected override void OnInitialized()
  {
    base.OnInitialized();
    SetTimer();
    List<double> xAxis = Enumerable.Range(0, 100).Select(i => i * 1.0).ToList();
    List<double> yAxis = Enumerable.Range(0, 100).Select(i => i * 1.0).ToList();

    _defaultGraphViewModel.SetXData(xAxis);
    _defaultGraphViewModel.SetYData(yAxis);


    _areaGraphViewModel.SetXData(xAxis);
    _areaGraphViewModel.SetYData(yAxis);

    _areaWithOverlaysGraphViewModel.SetXData(xAxis);
    _areaWithOverlaysGraphViewModel.SetYData(yAxis);
    _defaultGraphViewModel.OverlayStart = 0;
    _defaultGraphViewModel.OverlayEnd = 50;

  }
  private static System.Timers.Timer aTimer;
  private static double increment = 1;
  private void SetTimer()
  {
    // Create a timer with a two second interval.
    aTimer = new System.Timers.Timer(1000);
    // Hook up the Elapsed event for the timer.
    aTimer.Elapsed += OnTimedEvent;
    aTimer.AutoReset = true;
    aTimer.Enabled = true;
  }
  private void OnTimedEvent(Object source, ElapsedEventArgs e)
  {
    Random rand = new Random();

    List<double> xAxis = new List<double>();
    List<double> yAxis = new List<double>();

    for ( int i =0; i< 100; i++)
    {
      xAxis.Add(i);
      double temp = (rand.NextDouble() * 1000) % 100;
      yAxis.Add(temp);
    }

    _defaultGraphViewModel.SetXData(xAxis);
    _defaultGraphViewModel.SetYData(yAxis);

    Console.WriteLine("The Elapsed event was raised at {0:HH:mm:ss.fff}",
                      e.SignalTime);
  }
}