@using Clf.Blazor.Basic.Components.Controls.Helpers
@using Clf.Blazor.Basic.Components.Controls.Models;
@using Clf.Blazor.Basic.Components.Controls.ViewModels.MonitorWidgetViewModels;
@using Microsoft.AspNetCore.Hosting
@using System.IO
@inherits WidgetBase
@inject IWebHostEnvironment webHostEnv
@implements IDisposable

@if (ViewModel.IsVisible)
{
  <div style=" 
	 display:inline-block;
	 box-shadow: @($"0 0 0 2px {Utilities.GetColourFromBorderStatus(ViewModel.BorderStatus)?.HtmlRgbaString}");
	"
	title= "@(ViewModel.ShowTooltip? ViewModel.TooltipText:string.Empty)"
	>
	  @{
		  var source = "_content/Clf.Blazor.Basic.Components/no-image.svg";
		  @if (ViewModel.Symbols.Count()!=0 
		  		  && ViewModel.SelectedSymbol < ViewModel.Symbols.Count() 
		  		  && File.Exists(Path.Combine(webHostEnv.WebRootPath, ViewModel.Symbols[ViewModel.SelectedSymbol]))
		  )
		  source = ViewModel.Symbols[ViewModel.SelectedSymbol];
	  }

  @if (ViewModel.PreserveRatio)
	  {
		<img src="@source" width="@ViewModel.Width" height="@ViewModel.Height"/>
	  }
	  else
	  {
		<img src="@source" />
	  }

  </div>
}

@code {
  [Parameter]
  public SymbolViewModel ViewModel { get; set; } = new SymbolViewModel();

  protected override void OnInitialized()
  {
	base.OnInitialized();
	ViewModel.PropertyChanged += OnPropertyChanged;
  }

  void IDisposable.Dispose()
  {
	ViewModel.PropertyChanged -= OnPropertyChanged;
  }
}
